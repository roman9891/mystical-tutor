module.exports = {
  treasure: {
    description: 'Mentions treasure',
    type: 'regex',
    name: 'Treasure',
    regex: /[Tt]reasure/,
    searchTerm: '/[Tt]reasure/',
  },
  'attack trigger': {
    description: 'Trigger on attack',
    type: 'regex',
    name: 'Attack Trigger',
    regex: /[Ww]henever(.+)attack/,
    searchTerm: '/[Ww]henever(.+)attack/',
  },
  'token maker': {
    description: 'Creates a token',
    type: 'regex',
    name: 'Token Maker',
    regex: /[Cc]reate(.+)token/,
    searchTerm: '/[Cc]reate(.+)token/',
  },
  'mana producer': {
    description: 'Produces mana',
    type: 'regex',
    name: 'Mana Producer',
    regex: /[Aa]dd(?!i)(.+)mana/,
    searchTerm: '/[Aa]dd(?!i)(.+)mana/',
  },
  ETB: {
    description: 'Triggers when it enters the battlefield',
    type: 'regex',
    name: 'Enter Trigger',
    regex: / enter(.+)battlefield/,
    searchTerm: '/ enter(.+)battlefield/',
  },
  artifact: {
    description: 'Mentions artifacts',
    type: 'regex',
    name: 'Artifact Related',
    regex: / artifact/,
    searchTerm: '/ artifact/',
  },
  enchantment: {
    description: 'Mentions enchantments',
    type: 'regex',
    name: 'Enchantment Related',
    regex: / enchantment/,
    searchTerm: '/ enchantment/',
  },
  instant: {
    description: 'Mentions instants',
    type: 'regex',
    name: 'Instant Related',
    regex: / instant/,
    searchTerm: '/ instant/',
  },
  sorcery: {
    description: 'Mentions sorceries',
    type: 'regex',
    name: 'Sorcery Related',
    regex: /(?<!as a) sorcer(y|ies)/,
    searchTerm: '/(?<!as a) sorcer(y|ies)/',
  },
  creature: {
    description: 'Mentions creatures',
    type: 'regex',
    name: 'Creature Related',
    regex: / creature/,
    searchTerm: '/ creature/',
  },
  land: {
    description: 'Mentions lands',
    type: 'regex',
    name: 'Land Related',
    regex: / land/,
    searchTerm: '/ land/',
  },
  'activated ability': {
    description: 'Has an activated ability',
    type: 'regex',
    name: 'Activated Ability',
    regex: /:/,
    searchTerm: ' /:/',
  },
  lord: {
    description: 'Grants static benefit to all',
    type: 'regex',
    name: 'Lord',
    regex: /you control (get|have)(?!(.+)until)/,
    searchTerm: '/you control (get|have)(?!(.+)until)/',
  },
  'cost reduction': {
    description: 'Has cost reduction',
    type: 'regex',
    name: 'Cost Reduction',
    regex: /cost(.+)less/,
    searchTerm: '/cost(.+)less/',
  },
  discard: {
    description: 'Mentions discard',
    type: 'regex',
    name: 'Discard',
    regex: / discard/,
    searchTerm: '/ discard/',
  },
  debuff: {
    description: 'reduces stats',
    type: 'regex',
    name: 'Debuff',
    regex: / -\d/,
    searchTerm: '/ -\\d/',
  },
  buff: {
    description: 'increases stats',
    type: 'regex',
    name: 'Buff',
    regex: / \+\d/,
    searchTerm: '/ \\+\\d/',
  },
  impulse: {
    description: 'plays cards exiled from top of library',
    type: 'regex',
    name: 'Impulse Draw',
    regex: /(E|e)xile(.+)top(.+)library(.+)(Y|y)ou may (play|cast)/,
    searchTerm: '/(E|e)xile(.+)top(.+)library(.+)(Y|y)ou may (play|cast)/',
  },
  draw: {
    description: 'Mentions drawing cards',
    type: 'regex',
    name: 'Draw',
    regex: /( d|D)raw /,
    searchTerm: '/( d|D)raw /',
  },
  dies: {
    description: 'Triggers on death',
    type: 'regex',
    name: 'Death Trigger',
    regex: / dies?/,
    searchTerm: '/ dies?/',
  },
  reanimate: {
    description: 'Returns from graveyard to battlefield',
    type: 'regex',
    name: 'Reanimate',
    regex: / graveyards? onto the battlefield under/,
    searchTerm: '/ graveyards? onto the battlefield under/',
  },
  bounce: {
    description: 'Returns to hand',
    type: 'regex',
    name: 'Bounce',
    // regex: /(R|r)eturn target(.+)to (its|their) owner('s|s') hand/,
    regex: /(R|r)eturn(?!.+graveyard)(.+)hand/,
    searchTerm: '/(R|r)eturn(?!.+graveyard)(.+)hand/',
  },
  bind: {
    description: 'Prevents untapping',
    type: 'regex',
    name: 'Bind',
    regex: /doesn't untap during/,
    searchTerm: "/doesn't untap during/",
  },
  freeCast: {
    description: 'Mentions spells cast for free',
    type: 'regex',
    name: 'Free Cast',
    regex: /without paying (its|their) mana cost/,
    searchTerm: '/without paying (its|their) mana cost/',
  },
  theft: {
    description: 'Mentions playing other players cards',
    type: 'regex',
    name: 'Theft',
    regex: /(opponent|to a player)(.+)as though it were mana/,
    searchTerm: ' /(opponent|to a player)(.+)as though it were mana/',
  },
  buttStrike: {
    description: 'Assigns damage with toughness rather than power',
    type: 'regex',
    name: 'Butt Strike',
    regex: /rather than its power/,
    searchTerm: '/rather than its power/',
  },
  counterspell: {
    description: 'Counters a spell',
    type: 'regex',
    name: 'Counterspell',
    regex: /(C|c)ounter target/,
    searchTerm: '/(C|c)ounter target/',
  },
  search: {
    description: 'Mentions searching',
    type: 'regex',
    name: 'Search',
    regex: /(S|s)earch(.+)library/,
    searchTerm: '/(S|s)earch(.+)library/',
  },
  dealsDamage: {
    description: 'Deals damage',
    type: 'regex',
    name: 'Direct Damage',
    regex: /deals (\d|X)\d? damage/,
    searchTerm: '/deals (\\d|X)\\d? damage/',
  },
  counters: {
    description: 'Mentions counters',
    type: 'regex',
    name: 'Counter Related',
    regex: /counters?(?! tar)/,
    searchTerm: '/counters?(?! tar)/',
  },
  threaten: {
    description: 'Temporarily gains control',
    type: 'regex',
    name: 'Threaten',
    regex: /(G|g)ain control(.+)until/,
    searchTerm: '/(G|g)ain control(.+)until/',
  },
  lifegain: {
    description: 'Gains life',
    type: 'regex',
    name: 'Life Gain',
    regex: /(G|g)ains? ((\d|X)\d?\d? life|life)/,
    searchTerm: '/(G|g)ains? (\\d|X)\\d?\\d? life/',
  },
  lifeLoss: {
    description: 'Mentions losing life',
    type: 'regex',
    name: 'Life Loss',
    regex: /(L|l)oses? ((\d|X)\d?\d? life|life)/,
    searchTerm: '/(L|l)oses? ((\\d|X)\\d?\\d? life|life)/',
  },
  // removal: {
  //   description: 'Can remove some type of permanent',
  //   type: 'regex',
  //   name: 'Removal',
  //   regex: /(deals (\d|X)\d? damage|([Ee]xile|[Dd]estroy) target)/,
  //   searchTerm: '/(deals (\d|X)\d? damage|([Ee]xile|[Dd]estroy) target)/',
  // },
}
